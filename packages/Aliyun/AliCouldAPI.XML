<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AliCouldAPI</name>
    </assembly>
    <members>
        <member name="T:AliCould.com.API.CloudSearchApi">
            <summary>
            
            云搜索客户端SDK。
            
            用于管理索引和获取指定索引的操作接口。
            
            管理索引：
            1. 列出所有索引
            2. 创建索引
            3. 删除索引
            4. 更改索引名称
            
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchApi.API_VERSION">
            <summary>
            var string 定义API版本
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchApi._apiURL">
            <summary>
            API接入点 (Endpoint) URL
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchApi._clientId">
            <summary>
            
            用户唯一编号（client_id）。
            
            此编号为创建用户时自动创建，请访问以下链接来查看您的用户编号：
            
            @link http://css.aliyun.com/manager/config/
            
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchApi._clientSecret">
            <summary>
            
            客户的密钥。
            
            此密钥为创建用户时自动创建，您可以访问以下链接来查看或重置您的密钥：
            
            @link http://css.aliyun.com/manager/config/
            
            </summary>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.#ctor(System.String,System.String,System.String)">
            <summary>
            
            构造函数。
            和用户密钥，用户密钥可以在网站中重置，如果您在网站中重置了密钥，请务必确认传递给此 
            NOTE: 用户唯一编号和用户密钥在创建用户时自动创建，请访问一下链接来获取您的用户编号
            参数的密钥为最新的密钥。
            
            </summary>
            <seealso cref="!:http://css.aliyun.com/manager/config/"/>
            <param name="apiURL">API 接入点URL，非空字符串。</param>
            <param name="clientId">客户唯一ID，注册用户时获得。</param>
            <param name="clientSecret">客户的密钥，用于验证客户的操作合法性。</param>
            <exception cref="T:System.ArgumentException">参数不合法</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.getIndex(System.String)">
            <summary>
            
            获取指定索引的CloudSearchIndex对象。
            
            该对象可以向索引中添加、删除文档和查询索引，请访问以下链接来访问该对象的方法和属性：
            
            </summary>
            <param name="indexName">索引名称, 为非空字符串，必须是已经创建成功的索引。</param>
            <returns>返回CloudSearchIndex对象。</returns>
            <exception cref="T:System.ArgumentNullException">如果参数不合法，则抛出此异常。</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.listIndexes">
            <summary>
            
            列出用户的所有索引。
            
            </summary>
            <returns>返回所有索引列表。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.createIndex(System.String,System.String)">
            <summary>
            根据指定的索引名称和模板来创建一个索引。
            </summary>
            <param name="indexName"></param>
            <param name="template">
                索引模板名称，目前支持社区、应用、小说和资讯四个模板，
                对应名称为："bbs", "download", "novel", "news"。
            </param>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.deleteIndex(System.String)">
            <summary>
            
            根据索引名称删除指定索引。
            
            </summary>
            <param name="indexName">需要删除的索引名称。</param>
            <returns>返回调用api删除的response，通常可忽略</returns>
            <exception cref="T:System.ArgumentException">如果参数错误，则抛出此异常。</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.renameIndex(System.String,System.String)">
             <summary>
             
              更新索引名称。
            
             </summary>
             <param name="indexName"> 需要更新的索引名称。</param>
             <param name="newIndexName"> 新的索引名称。</param>
             <returns>调用API的返回值，可忽略</returns>
             <exception cref="T:System.ArgumentException">如果参数错误，则抛出此异常。</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.exists(System.String)">
            <summary>
            检测指定索引是否存在。
            </summary>
            <param name="indexName">指定的索引名称。</param>
            <returns>如果索引存在则返回true，否则返回false。</returns>
            <exception cref="!:CloudSearchIndexNotExists">如果参数错误，测抛出此异常。</exception>
            <exception cref="!:CloudSearchInvalidIndexNameException">如果其他网络错误，则抛出此异常。</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.indexRootURL">
            <summary>
            获取访问索引的根URL。
            </summary>
            <returns>返回URL。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.indexURL(System.String)">
            <summary>
            
            获取指定索引的根URL。
            
            </summary>
            <param name="indexName">索引名称</param>
            <returns>返回根URL。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.docURL(System.String)">
            <summary>
            获取指定索引的doc访问URL。
            </summary>
            <param name="indexName">索引名称。</param>
            <returns>返回访问doc的URL。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.topURL(System.String)">
            <summary>
            获取指定索引的top query访问URL。
            </summary>
            <param name="indexName">索引名称。</param>
            <returns>返回访问doc的URL</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.statusURL(System.String)">
            <summary>
            获取指定索引的状态访问URL。
            </summary>
            <param name="indexName">索引名称</param>
            <returns>返回获取索引状态的URL。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.errorURL(System.String)">
            <summary>
            获取指定索引的错误访问URL。
            </summary>
            <param name="indexName">索引名称。</param>
            <returns>返回获取错误信息的URL。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.searchURL(System.String)">
            <summary>
            获取指定索引的搜索URL。
            </summary>
            <param name="indexName">索引名称。</param>
            <returns>返回指定索引检索的URL。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.rootURL">
            <summary>
            获取API的根URL。
            </summary>
            <returns>返回api的根URL。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.apiURL">
            <summary>
            获取API URL。
            </summary>
            <returns>返回API URL。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.checkIndexName(System.String)">
            <summary>
            检查索引名称是否合法。
            </summary>
            <param name="indexName">索引名称。</param>
            <exception cref="T:System.ArgumentException">如果非法索引名称，则抛出此异常</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi._makeSign(System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            根据参数创建签名信息。
            
            @param array 参数数组。
            @return string 签名字符串。
            
            </summary>
            <param name="parameter">参数数组</param>
            <returns>签名字符串</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi._makeNonce">
            <summary>
            
            创建Nonce信息。
            
            </summary>
            <returns>返回Nonce信息。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.buildParams(System.Collections.Specialized.NameValueCollection)">
            <summary>
            将参数数组转换成http query字符串
            
            @param array $params 参数数组
            @return string query 字符串
            </summary>
            <param name="parameters">参数数组</param>
            <returns>字符串</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.apiCall(System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
            <summary>
            调用Web API。
            </summary>
            <param name="method">HTTP请求类型，'GET' 或 'POST'。</param>
            <param name="url">WEB API的请求URL</param>
            <param name="parameters">参数数组。</param>
            <param name="httpOptions">http option参数数组。</param>
            <param name="webRequest">默认采用socket方式请求，请根据您的空间或服务器类型进行选择 。</param>
            <returns>返回decode后的HTTP response。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.requestByWebrequest(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
            <summary>
            HttpWebRequest 版本
            使用方法：
            var post_string = new NameValueCollection();;  
            post_string.Add(...);
            requestByWebrequest("POST", "http://alicloud.com/",post_string);  
            </summary>
            <param name="method">发送方式，POST/GET</param>
            <param name="url">WEB API的请求URL</param>
            <param name="parameters">参数数组。</param>
            <param name="httpOptions">http option参数数组。</param>
            <returns>返回decode后的HTTP response。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.requestBySocket(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            Socket版本 
            
            使用方法： 
            
            var post_string = new NameValueCollection();;  
            post_string.Add(...);
            requestBySocket("POST", "http://alicloud.com/",post_string);  
            
            </summary>
            <param name="method">HTTP请求类型，'GET' 或 'POST'。</param>
            <param name="url">WEB API的请求URL</param>
            <param name="parameters">参数数组。</param>
            <param name="httpOptions">http option参数数组。</param>
            <returns>返回decode后的HTTP response。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.parseHost(System.String)">
            <summary>
            分析Web API的请求Uri
            </summary>
            <param name="host">Web API的请求Uri</param>
            <returns>封装后的UriBuilder</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.buildRequestContent(System.UriBuilder,System.String,System.String)">
            <summary>
            构造发送请求的内容
            </summary>
            <param name="parse">封装后的UriBuilder</param>
            <param name="method">HTTP请求类型，'GET' 或 'POST'。</param>
            <param name="data">拼接好的Uri参数</param>
            <returns>构造的请求内容</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.parseResponse(System.String)">
            <summary>
            分析返回的Response内容并封装到JObject实例中。
            </summary>
            <param name="responseText">response内容</param>
            <returns>用response返回内容封装的JObject 实例</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.parseHttpSocketHeader(System.String)">
            <summary>
            
            从socket header获取http 返回的status code
            
            </summary>
            <param name="str">response内容的header，在'/r/n/r/n'之前。</param>
            <returns>将header封装到JObject 实例。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchApi.responseToException(System.UInt32,System.String)">
            <summary>
            将response返回的错误信息转换成Exception。
            
            </summary>
            <param name="errorCode">错误编码</param>
            <param name="response">API返回的代码</param>
            <returns></returns>
        </member>
        <member name="T:AliCould.com.API.CloudSearchIndex">
             <summary>
             云搜索客户端API索引结构。
             
             此类用于管理和检索索引数据的接口，包含以下功能：
             
             1. 获取指定索引状态信息;
             2. 针对指定的索引添加或删除文档;
             3. 获取指定索引状态;
             4. 根据关键词或某些特定的条件查询索引。
            
             @package CloudSearchAPI
             @version 0.1.0
             @filesource 
             
             </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchIndex._api">
            <summary>
            CloudSearchAPI 对象。
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchIndex._indexName">
            <summary>
            索引名称，在该类被实例化的时候引入。
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchIndex._indexURL">
            <summary>
            访问或操作指定索引的URL。
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchIndex._docURL">
            <summary>
            查询、添加或删除指定索引中文档的URL。
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchIndex._topURL">
            <summary>
            查询top query 的文档URL。
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchIndex._metaURL">
            <summary>
            获取指定索引元信息的URL。
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchIndex._errorURL">
            <summary>
            获取指定索引错误信息的URL。
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchIndex._searchURL">
            <summary>
            执行指定索引查询的URL。
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchIndex._meta">
            <summary>
            指定索引的元信息。
            </summary>
        </member>
        <member name="F:AliCould.com.API.CloudSearchIndex.FACET_PARAMS">
            <summary>
            facet查询支持的参数列表。
            </summary>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.#ctor(AliCould.com.API.CloudSearchApi,System.String)">
            <summary>
            
            构造函数，由CloudSearchApi对象调用，请点击以下链接来获取CloudSearchApi的
            getIndex方法详情。
            
            </summary>
            <param name="api">用于管理索引的API对象</param>
            <param name="indexName">索引名称。</param>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.getTemplate">
            <summary>
            获取索引所属的索引模板名称。
            </summary>
            <returns>返回该指定索引所使用的模板类型。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.getUpdateTime">
            <summary>
            获取索引的最后更新时间戳。
            </summary>
            <returns>返回该索引的最后更新时间戳，精确到秒；如果没有获取到更新时间，则返回为空。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.getTotalDocCount">
            <summary>
            获取索引中包含的文档的总数量。
            
            </summary>
            <returns>返回文档总数量。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.getUV">
            <summary>
            获取索引上一天的UV值。
            </summary>
            <returns>返回索引的UV值，为前一天UV的数量。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.getPV">
            <summary>
            获取索引上一天的PV值。
            </summary>
            <returns>返回索引的PV值，为前一天的PV的数量。</returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.getErrorMessage(System.String,System.String)">
            <summary>
            
             获取索引的最近错误列表。
             
            </summary>
            <param name="page">指定获取第几页的错误信息。</param>
            <param name="pageSize">指定每页显示的错误条数。</param>
            <returns>返回指定页数的错误信息列表。</returns>
            <exception cref="T:System.Exception">如果参数不正确，则抛出此异常。</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.getDocument(System.String)">
            <summary>
            通过文档ID获取文档的详细内容。
            </summary>
            <param name="docId">指定文档的唯一编码。</param>
            <returns>返回文档内容的数据</returns>
            <exception cref="T:System.Exception">如果参数不正确，则抛出此异常。</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.addDocument(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            将一篇文档添加到指定索引中。
            
            NOTE: 如果要添加的文档ID在索引中已经存在，则会覆盖掉此索引中的文档数据。
            @todo 目前文档内容只支持utf-8编码，其他编码持将在后续版本实现
            
            例子:
            <code>
            var api = new CloudSearchApi("http://api.css.aliyun.com", "1", "xxx");
            var index = api.getIndex("myIndex");
            NameValueCollection fields = new NameValueCollection();
            fields.Add("title", "the title content");
            fields.Add("body", "the body content");
            try{
                index.addDocument(1, fields);
            } catch(ArgumentException ex)
            {
                //echo "Invalid argument " + e.Message;
            } catch(CloudSearchAuthorizeFailed ex)
            {
                //echo ex.Message;
            } catch(CloudSearchHttpException ex)
            {
                //echo "HTTP Exception";
            }
            
            // TODO: Add sample code here
            </code>
            </summary>
            <param name="docId">文档唯一编码，此编码不能重复，如果重复则会替换掉系统中现有
                的数据信息。</param>
            <param name="fields">已Key-value形式表示的文档的字段内容；fields中的字段内容需要和当前索引模板指定的字段一致。</param>
            <exception cref="T:System.ArgumentException">如果参数不正确，则抛出此异常。</exception>
            <exception cref="!:CloudSearchIndexNotExists">如果索引不存在，则抛出此异常。</exception>
            <exception cref="!:CloudSearchAuthorizeFailed">如果用户安全验证失败，则抛出磁异常。</exception>
            <exception cref="!:CloudSearchHttpException">如果出现网络错误，则抛出此异常。</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.addDocuments(System.String[])">
            <summary>
            
            将一批文档添加到索引中。
            
            </summary>
            <param name="documents">多篇文档的文档内容。</param>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.deleteDocuments(System.String[])">
            <summary>
            
            同时删除当前索引下的多条文档。
            
            </summary>
            <param name="docIds">文档ID列表。</param>
            <exception cref="T:System.Exception">如果参数不正确，则抛出此异常。</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.search(System.String,System.String,System.String,System.String[],System.String,System.Collections.Specialized.NameValueCollection,System.String[])">
             <summary>
             
             根据指定的关键词或条件查询索引。
             
             例子:
             <code>
             $api = new CloudSearchApi(APIROOT, CLIENT_ID, CLIENT_SECRET);
             $index = $api-&gt;getIndex('test_index');
             $fields = array('title' =&gt; 'the title content',
                             'body' =&gt; 'the body content');
             $index-&gt;addDocument(1, $fields);
            
             try {
                 $index-&gt;search('q=test');
             } catch (InvalidArgumentException $e) {
                echo 'Invalid argument ' . $e-&gt;getMessage();
             } catch (CloudSearchAuthorizeFailed $e) {
                echo $e-&gt;getMessage();
             } catch (CloudSearchHttpException $e) {
                echo 'HTTP exception: ' . $e-&gt;getMessage();
             }
             </code>
             
             </summary>
             <param name="query">
             查询子句，支持简单和复杂查询表达式，对于简单的关键词查询: 
                 q=query_expression, 例如: q=apple
                 对于语法丰富的查询（布尔或短语查询等）: 
                 cq=title:iphone AND uname:phpwind AND price=1000...6000
             </param>
             <param name="page">返回查询结果的第几页，默认返回第一页。</param>
             <param name="pageSize">每一页结果条数，默认是10条。</param>
             <param name="sort">排序子句。</param>
             <param name="filter">过滤子句。</param>
             <param name="facet">Facet子句。</param>
             <param name="fetchFields">查询结果中需要返回的字段，多个字段用";"分割。</param>
             <returns>返回查询结果。</returns>
             <exception cref="T:System.ArgumentException">如果参数不正确，则抛出此异常。</exception>
             <exception cref="!:CloudSearchIndexNotExists">如果索引不存在，则抛出此异常。</exception>
             <exception cref="!:CloudSearchAuthorizeFailed">如果用户安全验证失败，则抛出磁异常。</exception>
             <exception cref="!:CloudSearchHttpException">如果出现网络错误，则抛出此异常。</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex.makeDocument(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            组装单篇文档内容。
            </summary>
            <param name="action">文档处理方式，'add' 表示添加文档，'delete'表示删除文档。</param>
            <param name="docId">文档ID。</param>
            <param name="fields">key-value形式的字段内容。</param>
            <param name="charset">文档编码。</param>
            <returns></returns>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex._refreshMeta">
            <summary>
            重新获取索引的元信息
            </summary>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex._checkPageClause(System.Object)">
            <summary>
            检查page参数是否合法。
            </summary>
            <param name="page">指定的页码。</param>
            <exception cref="T:System.ArgumentException">如果参数不正确，则抛出此异常。</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex._checkPageSizeClause(System.Object)">
            <summary>
            检查pageSize参数是否合法。
            </summary>
            <param name="pageSize"></param>
            <exception cref="T:System.ArgumentException">参数不合法</exception>
        </member>
        <member name="M:AliCould.com.API.CloudSearchIndex._checkFacetClause(System.Collections.Specialized.NameValueCollection)">
            <summary>
            检查facet子句是否合法。
            </summary>
            <param name="facet"></param>
            <exception cref="T:System.ArgumentException">参数不合法</exception>
        </member>
        <member name="T:AliCould.com.API.Utilities">
            <summary>
            静态Helper类，提供调用阿里云Web API必要的helper函数。
            Helper class, support helper method like calc Md5, get rid url and so on.
            </summary>
        </member>
        <member name="M:AliCould.com.API.Utilities.CalcMd5(System.String)">
            <summary>
            
            计算string的Md5值。
            
            Calculate the MD5 hash of a specified string
            
            </summary>
            <param name="s">
            用来计算Md5的string
            source string to get md5 hash
            </param>
            <returns>
            计算得到的md5 hash值
            Md5 hash string of the param 's'
            </returns>
        </member>
        <member name="M:AliCould.com.API.Utilities.ToJProperty(System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            为NameValueCollection类提供扩展方法。
            
            将实例的内容转换为JProperty数组。
            
            </summary>
            <param name="collection">非空的Name-value对</param>
            <returns>将collection中的名称-键值对封装成Jason property数组</returns>
        </member>
        <member name="M:AliCould.com.API.Utilities.time">
            <summary>
            将日期转换成long型的。
            </summary>
            <returns></returns>
        </member>
        <member name="F:AliCould.com.API.Utilities.timeStamp">
            <summary>
            DateTime实例代表1970年1月1日零时。
            </summary>
        </member>
        <member name="M:AliCould.com.API.Utilities.http_build_query(System.Collections.Specialized.NameValueCollection)">
            <summary>
            PHP函数http_build_query的.NET版本实现。
            </summary>
            <param name="data">名称-键值对</param>
            <returns>拼装的参数-值字符串</returns>
        </member>
        <member name="M:AliCould.com.API.Utilities.UrlEncode(System.String)">
            <summary>
            替换Uri中的转义字符。
            </summary>
            <param name="value">Uri中的字符串</param>
            <returns>转义后的字符串</returns>
        </member>
        <member name="M:AliCould.com.API.Utilities.PregReplace(System.String[],System.String[],System.String)">
            <summary>
            PHP函数Preg_Replace的.NET实现。替换多个正则表达式的匹配项。
            </summary>
            <param name="pattern">要替换的内容的正则表达式</param>
            <param name="replacements">用于替换匹配字符串的内容</param>
            <param name="input">原始字符串数据</param>
            <returns>替换后的结果</returns>
        </member>
        <member name="M:AliCould.com.API.Utilities.KeySort(System.Collections.Specialized.NameValueCollection)">
            <summary>
            将NameValueCollection按key排序
            </summary>
            <param name="col">原始Namevaluecollection实例</param>
            <returns>排序后的NameValueCollection实例</returns>
        </member>
        <member name="M:AliCould.com.API.Utilities.RTrim(System.String,System.String)">
            <summary>
            PHP函数RTrim的.NET实现。去掉字符串末的制定字符串
            </summary>
            <param name="source">原始字符串</param>
            <param name="trimStr">需要去掉的字符串</param>
            <returns>结果</returns>
        </member>
        <member name="M:AliCould.com.API.Utilities.Implode(System.String[],System.String)">
            <summary>
            将字符串数组用制定字符串连接
            </summary>
            <param name="array">原始字符串数组</param>
            <param name="connectString">连接字符串</param>
            <returns>连接后的结果</returns>
        </member>
        <member name="M:AliCould.com.API.Utilities.Contains(System.String[],System.String)">
            <summary>
            String[] 的扩展方法，判断数组中是否包含某个string
            </summary>
            <param name="strArray"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
    </members>
</doc>
